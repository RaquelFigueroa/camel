//Name:
//Date: 6 November 2015
//Description:

#include <iostream>//cin, cout
#include <ctime>//srand()
#include <cstdlib>//rand, abs
#include <string>//string
#include <cctype>//tolower

using namespace std;

char menu ();
void status(int valMiles, int valDrinks, int valNatives);
void rest(int& valCamel, int& valNatives);
void nativeMiles(int& valNatives);//adds random # miles to natives distance
void fullSpeed(int& valMiles, int& valThirst, int& valTired, int& valNatives);
void modSpeed(int& valMiles, int& valThirst, int& valTired, int& valNatives);
void drink(int& valThirst, int& valDrinks);

int main()
{
    bool done(false);
    char ans;
    int miles(0);
    int thirst(0);
    int camelTiredness(0);
    int natives(-20);
    int drinks(3);
    srand(time(0));
    
    //cout introduction
    cout << "\nWelcome to Camel!\n"
         << "\nYou have stolen a camel to make your way across the great Mobi desert.\n"
         << "The natives want their camel back and are chasing you down!\n"
         << "Survive your desert trek and outrun the natives.\n" << endl;
         
    while (!done)
    {
        ans = menu();
        
        switch (ans)
        {
            case 'a': drink(thirst, drinks);
                break;
            case 'b': modSpeed(miles, thirst, camelTiredness, natives);//full speed
                break;
            case 'c': fullSpeed(miles, thirst, camelTiredness, natives);//full speed
                break;
            case 'd': rest(camelTiredness, natives);
                break;
            case 'e': status(miles, drinks, natives); //status function
                break;
            case 'q': done = true;
                break;
        }
                
        if (thirst > 4 && thirst < 6)
        {
            cout << "\nYou are thirst.\n" << endl;
        }
        
        if (thirst >= 6)
        {
            cout <<"\nYou died.\n" << endl;
            done = true;
        }
        
        if (camelTiredness > 5 && camelTiredness < 8)
        {
            cout << "\nYour camel is tired.\n" << endl;
        }
        
        if (camelTiredness >= 8)
        {
            cout << "\nYour camel is dead.\n" << endl;
        }
        
        if (natives >= 0)
        {
            cout << "\nThe natives caught up.\n" << endl;
            done = true;
        }
        
        if (natives < -15)
        {
            cout << "\nThe natives are getting close!\n" << endl;
        }
        
        if (miles >= 200)
        {
            cout << "\nYou won!\n" << endl;
            done = true;
        }
    
    }


    return 0;
}
//**************************************************
char menu ()
{
    char choice;
    
    cout << "A. Drink from your canteen.\n"
         << "B. Ahead moderate speed.\n"
         << "C. Ahead full speed.\n"
         << "D. Stop and rest.\n"
         << "E. Status check.\n"
         << "Q. Quit.\n" 
         << "Your choice? ";
         
    cin >> choice;
    
    choice = tolower(choice);

    return choice;

}//end menu()
//***************************************************
//
void status(int valMiles, int valDrinks, int valNatives)
{
    cout << "\nMiles traveled: " << valMiles << endl
         << "Drinks in canteen: " << valDrinks << endl
         << "The natives are " << abs(valNatives) << " miles behind you\n"
         << endl;
}//end status()
//***************************************************
//
void rest(int& valCamel, int& valNatives)
{
    valCamel = 0;//reset camel tiredness to zero
    cout << "\nThe camel is happy ^o^\n"
         << endl;
         
    nativeMiles(valNatives);
    
}//end rest()
//***************************************************
//
void nativeMiles(int& valNatives)
{
    int miles = rand()%8 + 7;//adds # [7,14] miles 

    valNatives += miles;
    
}//end nativeMiles()
//***************************************************
//
void fullSpeed(int& valMiles, int& valThirst, int& valTired, int& valNatives)
{
    int milesAdded = rand()%11 + 10;
    int tiredAdded = rand()% 3 + 1; 
    valMiles += milesAdded;//add # [10, 20] miles to user 
    
    cout << "\nYour traveled " << milesAdded << " miles." << endl;

    valTired += tiredAdded;
    
    valThirst++;
      
    nativeMiles(valNatives);//add miles to native distance

}//end fullSpeed
//***************************************************
//
void modSpeed(int& valMiles, int& valThirst, int& valTired, int& valNatives)
{
    int milesAdded = rand()%8 + 5;
    int tiredAdded = rand()% 3 + 1; 
    cout << "Your traveled " << milesAdded << " miles." << endl;  
    
    valTired += tiredAdded;
    
    valThirst++; 
    
    valMiles += milesAdded;//add #[5,12 miles to user
}//end modSpeed()
//***************************************************
//
void drink(int& valThirst, int& valDrinks)
{
    valThirst = 0;
    valDrinks--;
    cout << "Thirst: " << valThirst << endl;
    cout << "num drinks: " << valDrinks << endl;

}//end drink()
//***************************************************
//
